openapi: 3.0.0
info:
  title: "microWMS service"
  description:  ""
  version: "1.0"
security:
  - ApiKeyAuth: []
  
servers:
  - url: http://microwms.ru/api/v1.0
    description: "production"
    
tags:
- name: "Общие методы"
- name: "Товары"
- name: "Производители"
- name: "Штрих-коды"

paths:
  /ping:
    get:
      tags:
        - "Общие методы"
      summary: проверкa активности сервиса
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'

  /refs/products/:
    get:
      tags:
        - "Товары"
      summary: получение списка товаров
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfuctsResponse'   
    post:
      tags: 
        - "Товары"
      summary: создание нового товара
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductItem"      
      responses:
        200:
          description: OK   
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultItem'  

  /refs/products/{product_id}/:
    get:
      tags:
        - "Товары"
      summary: получение товара по идентификатору
      parameters:
        - name: product_id
          in: path
          required: true
          description: идентификатор товара
          schema:
            type: integer          
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductItem'   
        404:
          description: товар не найден

    put:
      tags: 
        - "Товары"
      summary: изменение товара
      parameters:
        - name: product_id
          in: path
          required: true
          description: идентификатор товара
          schema:
            type: integer        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductItem"      
      responses:
        200:
          description: OK   
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultItem'  
    delete:
      tags:
        - "Товары"
      summary: удаление товара
      parameters:
        - name: product_id
          in: path
          required: true
          description: идентификатор товара
          schema:
            type: integer        
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfuctsResponse'                  
        404:
          description: товар не найден
          
  /refs/products/barcode/{barcode}/:
    get:
      tags:
        - "Товары"
      summary: получение товаров по штрих-коду
      parameters:
        - name: barcode
          in: path
          required: true
          description: штрих-код товара
          schema:
            type: string          
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductItem'   
        404:
          description: товар не найден          
          
  /refs/manufacturers:
    get:
      tags:
        - "Производители"
      summary: получение списка производителей
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManufacturerItem'  
    post:
      tags:
        - "Производители"
      summary: создание нового производителя
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManufacturerItem"      
      responses:
        200:
          description: OK 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultItem'               
  
  /refs/manufacturers/{manufacturer_id}:
    get:
      tags:
        - "Производители"
      summary: получение производителя по идентификатору
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          description: идентификатор производителя
          schema:
            type: integer          
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManufacturerItem'   
        404:
          description: товар не найден
    put:
      tags:
        - "Производители"
      summary: изменение производителя
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          description: идентификатор производителя
          schema:
            type: integer  
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManufacturerItem"      
      responses:
        200:
          description: OK 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultItem'               
    delete:
      tags:
        - "Производители"
      summary: удаление производителя
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          description: идентификатор производителя
          schema:
            type: integer        
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfuctsResponse'                  
        404:
          description: товар не найден
          
  /refs/warehouses:
    get:
      tags:
        - "Справочники"
      summary: получение списка складов
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseItem' 
  
  /refs/warehouses/{whs_id}/:
    get:
      tags:
        - "Справочники"
      summary: получение склада по идентификатору
      parameters:
        - name: whs_id
          in: path
          required: true
          description: идентификатор склада
          schema:
            type: string        
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseItem'                   

  /refs/warehouses/{whs_id}/zones/:
    get:
      tags:
        - "Справочники"
      summary: получение списка зон склада
      parameters:
        - name: whs_id
          in: path
          required: true
          description: идентификатор склада
          schema:
            type: string         
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseItem' 











components:
  schemas:
    Ping:
      type: object
      description: ответ на пинг
      properties:
        code: 
          type: integer
          example: "200"
        description: 
          type: string
          example: ""          
        version:
          type: string
          description: актуальная версия, рекомендуемая к использованию
          example: "v1.1"
    
    ResultItem:
      type: object
      properties:
        id:
          type: integer
          example: 1234
          description: идентификатор изменяемого/создаваемого объекта
        message:
          type: string
          example: "Не заполнено обязательное поле"
          description: идентификатор изменяемого/создаваемого объекта
        error: 
          type: string
          example: ""
          description: техническя информация об ошибке
          
    WarehouseItem:
      type: object
      description: элемент списка складов
      properties:
        id:
          type: integer
          example: 221
          description: идентификатор склада
        name:
          type: string
          example: "мой склад"
          description: название склада
        address:
          type: string
          description: адрес склада
      
    ZoneItem:
      type: object
      description: элемент списка зон
      properties:
        id:
          type: integer
          example: 221
          description: идентификатор склада
        name:
          type: string
          example: "мой склад"
          description: название склада
        address:
          type: string
          description: адрес склада  
          
    ProductItem:
      type: object
      description: элемент списка товаров
      properties:
        id:
          type: integer 
          description: идентификатор товара
        name:
          type: string
          description: наименование товара
        manufacturer:
          $ref: '#/components/schemas/ManufacturerItem'
        barcodes:
          type: array
          description: штрих-коды товара
          items:
            type: string
        size:
          type: object
          properties:
            length:
              type: integer
            width:
              type: integer
            height: 
              type: integer
            weight:
              type: integer
            volume:
              type: integer
            usefulVolume:
              type: integer 
    
    PaggingHeader:
      type: object
      properties:
        limit:
          type: integer
          description: запрошенное количество записей
        offset:
          type: integer
          description: смещение
        count:
          type: integer
          description: общее количество записей по отбору
    
    ProfuctsResponse:
      type: object
      properties:
        header: 
          $ref: '#/components/schemas/PaggingHeader'
        data:
          type: array
          items:
              $ref: '#/components/schemas/ProductItem'

    ManufacturerItem:
      type: object
      description: элемент списка производителей
      properties:
        id:
          type: integer 
          description: идентификатор производителя
          example: 13554
        name:
          type: string
          description: наименование производителя
          example: Производитель


      
  securitySchemes:
      ApiKeyAuth:        
        type: apiKey
        in: query      
        name: api_key 
      
      
        

name: Go

on:
  push:
    branches: [ "master" ]      

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: set up golang
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: build_back
      run: |
        sudo apt-get install -y libcups2-dev
        mkdir builds && CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -race -ldflags "-extldflags '-static'" -o build/mwms-daemon
      
    - name: build_front
      run: |
        cd web
        npm install npm@6.14.17
        npm run build --if-present
      
    - name: store artifact back
      uses: actions/upload-artifact@v3
      with:
        name: build_data
        path: build/
        
    - name: store artifact front
      uses: actions/upload-artifact@v3
      with:
        name: build_front_data
        path: web/dist/        

    - name: store artifact scripts
      uses: actions/upload-artifact@v3
      with:
        name: install scripts
        path: scripts/

  deploy:
    needs: [build]
    environment: production

    runs-on: ubuntu-latest

    env:
      SSH_KEY: ${{secrets.DEPLOY_KEY_FOR_VDS}}
      HOSTNAME: ${{secrets.HOSTNAME}}

    steps:
      - name: upload artifact back
        uses: actions/download-artifact@v3
        with:
          name: build_data
          path: build/

      - name: upload artifact front
        uses: actions/download-artifact@v3
        with:
          name: build_front_data
          path: web/dist/

      - name: upload artifact scripts
        uses: actions/download-artifact@v3
        with:
          name: install scripts
          path: scripts/

      - name: prepare and upload
        run: |
          set -eu
          mkdir "$HOME/.ssh"
          echo "$SSH_KEY" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"
          rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete . $HOSTNAME:/home/mike/deploy_mwms
          ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no $HOSTNAME chmod +x deploy_mwms/build/mwms-daemon
          ssh $HOSTNAME chmod +x deploy_mwms/scripts/install.sh 
          ssh $HOSTNAME sudo ./deploy_mwms/scripts/install.sh